/*--------------------------------*- C++ -*----------------------------------*\
  | =========                 |                                                 |
  | \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
  |  \\    /   O peration     | Version:  v2206                                 |
  |   \\  /    A nd           | Website:  www.openfoam.com                      |
  |    \\/     M anipulation  |                                                 |
  \*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

rinner  0.5;
router  1;
rinner45    #calc "$rinner * sqrt(0.5)";
router45    #calc "$router * sqrt(0.5)";
xright    4;
xleft    -2;
ymax    2;
zmin   -0.5; 
zmax    0.5;
nradial  80;
nquarter 20;
nxouter  200;
nyouter  40;
nz       1;

vertices 
    (
     ($rinner 0 $zmin ) // 0
     ($router 0 $zmin ) // 1
     ($xright 0 $zmin ) // 2
     ($xright $router45 $zmin ) // 3
     ($router45 $router45 $zmin ) // 4
     ($rinner45 $rinner45 $zmin ) // 5
     ($xright $ymax $zmin ) // 6
     ($router45 $ymax $zmin ) // 7
     (0 $ymax $zmin ) // 8
     (0 $router $zmin ) // 9 
     (0 $rinner $zmin ) // 10
     (#calc "-$rinner" 0 $zmin ) // 11
     (#calc "-$router" 0 $zmin ) // 12
     ($xleft 0 $zmin ) // 13
     ($xleft $router45 $zmin ) // 14
     (#calc "-$router45" $router45 $zmin ) // 15
     (#calc "-$rinner45" $rinner45 $zmin ) // 16
     ($xleft $ymax $zmin ) // 17
     (#calc "-$router45" $ymax $zmin ) // 18

    ( $rinner 0 $zmax ) // 19
    ( $router 0 $zmax ) // 20
    ( $xright 0 $zmax ) // 21
    ( $xright $router45 $zmax ) // 22
    ( $router45 $router45 $zmax ) // 23
    ( $rinner45 $rinner45 $zmax ) // 24
    ( $xright $ymax $zmax ) // 25
    ( $router45 $ymax $zmax ) // 26
    ( 0 $ymax $zmax ) // 27
    ( 0 $router $zmax ) // 28
    ( 0 $rinner $zmax ) // 29
    ( #calc "-$rinner" 0 $zmax ) // 30
    ( #calc "-$router" 0 $zmax ) // 31
    ( $xleft 0 $zmax ) // 32
    ( $xleft $router45 $zmax ) // 33
    ( #calc "-$router45" $router45 $zmax ) // 34
    ( #calc "-$rinner45" $rinner45 $zmax ) // 35
    ( $xleft $ymax $zmax ) // 36
    ( #calc "-$router45" $ymax $zmax ) // 37

    ($xright #calc "-$router45" $zmin ) // 38
    ($router45 #calc "-$router45" $zmin ) // 39
    ($rinner45 #calc "-$rinner45" $zmin ) // 40
    ($xright #calc "-$ymax" $zmin ) // 41
    ($router45 #calc "-$ymax" $zmin ) // 42
    (0 #calc "-$ymax" $zmin ) // 43
    (0 #calc "-$router" $zmin ) // 44
    (0 #calc "-$rinner" $zmin ) // 45
    ($xleft #calc "-$router45" $zmin ) // 46
    (#calc "-$router45" #calc "-$router45" $zmin ) // 47
    (#calc "-$rinner45" #calc "-$rinner45" $zmin ) // 48
    ($xleft #calc "-$ymax" $zmin ) // 49
(#calc "-$router45" #calc "-$ymax" $zmin ) // 50

    ( $xright #calc "-$router45" $zmax ) // 51
    ( $router45 #calc "-$router45" $zmax ) // 52
    ( $rinner45 #calc "-$rinner45" $zmax ) // 53
    ( $xright #calc "-$ymax" $zmax ) // 54
    ( $router45 #calc "-$ymax" $zmax ) // 55
    ( 0 #calc "-$ymax" $zmax ) // 56
    ( 0 #calc "-$router" $zmax ) // 57
    ( 0 #calc "-$rinner" $zmax ) // 58
    ( $xleft #calc "-$router45" $zmax ) // 59
    ( #calc "-$router45" #calc "-$router45" $zmax ) // 60
    ( #calc "-$rinner45" #calc "-$rinner45" $zmax ) // 61
    ( $xleft #calc "-$ymax" $zmax ) // 62
( #calc "-$router45" #calc "-$ymax" $zmax ) // 63
    );

    blocks //nradial = 80, nquarter = 20, nxouter = 200, nyouter = 40
    (
     hex (5 4 9 10 24 23 28 29)    ($nradial  $nquarter $nz) grading (1 1 1) // 0
     hex (0 1 4 5 19 20 23 24)     ($nradial  $nquarter $nz) grading (1 1 1) // 1
     hex (1 2 3 4 20 21 22 23)     ($nxouter  $nquarter $nz) grading (1 1 1) // 2
     hex (4 3 6 7 23 22 25 26)     ($nxouter  $nyouter  $nz) grading (1 1 1) // 3
     hex (9 4 7 8 28 23 26 27)     ($nquarter $nyouter  $nz) grading (1 1 1) // 4
     hex (15 16 10 9 34 35 29 28)  ($nradial  $nquarter $nz) grading (1 1 1) // 5
     hex (12 11 16 15 31 30 35 34) ($nradial  $nquarter $nz) grading (1 1 1) // 6
     hex (13 12 15 14 32 31 34 33) ($nquarter  $nquarter $nz) grading (1 1 1) // 7
     hex (15 18 17 14 34 37 36 33) ($nyouter  $nquarter $nz) grading (1 1 1) // 8
     hex (9 8 18 15 28 27 37 34) ($nyouter  $nquarter $nz) grading (1 1 1) // 9

     hex (40 45 44 39 53 58 57 52) ($nquarter $nradial $nz) grading (1 1 1) // 10
     hex (0 40 39 1 19 53 52 20)   ($nquarter $nradial $nz) grading (1 1 1) // 11
     hex (1 39 38 2 20 52 51 21)   ($nquarter $nxouter $nz) grading (1 1 1) // 12
     hex (39 42 41 38 52 55 54 51) ($nyouter $nxouter $nz) grading (1 1 1) // 13
     hex (44 43 42 39 57 56 55 52) ($nyouter $nquarter $nz) grading (1 1 1) // 14
     hex (48 47 44 45 61 60 57 58) ($nradial $nquarter $nz) grading (1 1 1) // 15
     hex (11 12 47 48 30 31 60 61) ($nradial $nquarter $nz) grading (1 1 1) // 16
     hex (12 13 46 47 31 32 59 60) ($nquarter $nquarter $nz) grading (1 1 1) // 17
     hex (47 46 49 50 60 59 62 63) ($nquarter $nyouter $nz) grading (1 1 1) // 18
hex (44 47 50 43 57 60 63 56)  ($nquarter $nyouter $nz) grading (1 1 1) // 19
    );

    edges
    (
     arc  0  5  (0 0 $zmin)
     arc  5 10  (0 0 $zmin)
     arc  1  4  (0 0 $zmin)
     arc  4  9  (0 0 $zmin)
     arc 19 24  (0 0 $zmax)
     arc 24 29  (0 0 $zmax)
     arc 20 23  (0 0 $zmax)
     arc 23 28  (0 0 $zmax)

     arc 11 16  (0 0 $zmin)
     arc 16 10  (0 0 $zmin)
     arc 12 15  (0 0 $zmin)
     arc 15  9  (0 0 $zmin)
     arc 30 35  (0 0 $zmax)
     arc 35 29  (0 0 $zmax)
     arc 31 34  (0 0 $zmax)
     arc 34 28  (0 0 $zmax)

     arc 0 40  (0 0 $zmin)
     arc 40 45  (0 0 $zmin)
     arc 1 39  (0 0 $zmin)
     arc 39 44  (0 0 $zmin)
     arc 19 53  (0 0 $zmax)
     arc 53 58  (0 0 $zmax)
     arc 20 52  (0 0 $zmax)
     arc 52 57  (0 0 $zmax)
     arc 11 48  (0 0 $zmin)
     arc 48 45  (0 0 $zmin)
     arc 12 47  (0 0 $zmin)
     arc 47 44  (0 0 $zmin)
     arc 30 61  (0 0 $zmax)
     arc 61 58  (0 0 $zmax)
     arc 31 60  (0 0 $zmax)
     arc 60 57  (0 0 $zmax)
    );

    boundary
    (
     top
     {
     type symmetryPlane;
     faces
     (
      (7 8 27 26)
      (6 7 26 25)
      (8 18 37 27)
      (18 17 36 37)
     );
     }
     bottom
     {
     type symmetryPlane;
     faces
     (
      (49 50 63 62)
      (50 43 56 63)
      (43 42 55 56)
      (42 41 54 55)
     );
     }
inlet
{
    type patch;
    faces
        (
         (14 13 32 33)
         (17 14 33 36)
         (46 13 32 59)
         (46 49 62 59)
        );
}
outlet
{
    type patch;
    faces
        (
         (2 3 22 21)
         (3 6 25 22)
         (38 51 21 2)
         (41 54 51 38)
        );
}
cylinder
{
    type wall;
    faces
        (
         (10 5 24 29)
         (5 0 19 24)
         (16 10 29 35)
         (11 16 35 30)
         (48 11 30 61)
         (45 48 61 58)
         (40 45 58 53)
         (0 40 53 19)
        );
}
frontAndBack
{
    type empty;
    faces
        (
         (5 10 9 4)
         (24 23 28 29)
         (0 5 4 1)
         (19 20 23 24)
         (1 4 3 2)
         (20 21 22 23)
         (4 7 6 3)
         (23 22 25 26)
         (4 9 8 7)
         (28 23 26 27)
         (16 15 9 10)
         (35 29 28 34)
         (12 15 16 11)
         (31 30 35 34)
         (13 14 15 12)
         (32 31 34 33)
         (14 17 18 15)
         (33 34 37 36)
         (15 18 8 9)
         (34 28 27 37)
         (45 40 39 44)
         (58 57 52 53)
         (40 0 1 39)
         (53 52 20 19)
         (39 1 2 38)
         (52 51 21 20)
         (39 38 41 42)
         (52 55 54 51)
         (44 39 42 43)
         (57 56 55 52)
         (47 48 45 44)
         (60 57 58 61)
         (12 11 48 47)
         (31 60 61 30)
         (13 12 47 46)
         (32 59 60 31)
         (49 46 47 50)
         (62 63 60 59)
         (50 47 44 43)
         (63 56 57 60)
         );
}
);
mergePatchPairs
(
);
// ************************************************************************* //
